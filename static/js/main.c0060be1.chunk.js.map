{"version":3,"sources":["App.tsx","Types.ts","Tiles.tsx","serviceWorker.ts","index.tsx"],"names":["Col","AppTab","bugsArr","bugsRaw","sort","a","b","index","fishArr","fishRaw","monthNames","shortMonths","CritterpediaTiles","props","state","noTimeBar","cookies","type","noCompleted","onlyMonth","onlyTime","showMore","name","value","ns","this","charAt","toUpperCase","substring","setState","tiles","map","data","key","parState","className","id","checked","onChange","setOption","htmlFor","React","Component","CritterpediaTile","f","done","e","detail","preventDefault","fs","now","Date","d","seasons","getMonth","active","times","t","Array","_","n","sp","split","hr1S","hr2S","hr1","Number","parseInt","hr2","i","push","includes","getHours","onMouseDown","func","onDoubleClick","setDone","style","backgroundImage","imageNum","price","location","join","shadow","whiteSpace","caught","s","HourBar","interval","setTimeout","setupInterval","getSeconds","setInterval","undefined","clearInterval","hrs","nowM","getMinutes","left","App","tab","Insectopedia","view","onClick","switchView","Fishopedia","Insects","Fish","January","February","March","April","May","June","July","August","September","October","November","December","overflowX","height","cols","allFishCols","month","Month","display","borderRight","width","textAlign","background","margin","color","condensedFishCols","AllBugs","reverseSort","bugsT","evenL","rev","aa","bb","ans","localeCompare","bug","m","even","Index","Name","Price","Location","Times","Months","v","Caught","setSort","overflowY","Shadow","AllFish","fishT","fish","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c0060be1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport {Bug, Fish, bugsArr, fishArr, monthNames} from \"./Types\"\r\nimport {CritterpediaTiles} from \"./Tiles\"\r\n\r\n\r\n\r\nenum Col {\r\n    Index, Name, Price, Location, Times, Shadow, Months, Caught\r\n}\r\n\r\n\r\n\r\n\r\n\r\nenum AppTab {\r\n    Insectopedia, Fishopedia, Insects, Fish, January, February, March, April, May, June, July, August, September, October, November, December\r\n}\r\n\r\ninterface AppState {\r\n    tab: AppTab\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {tab: AppTab.Insectopedia}\r\n    }\r\n\r\n    switchView(this: App, view: AppTab) {\r\n        this.setState({tab: view});\r\n    }\r\n\r\n    render() {\r\n        let t = this.state.tab;\r\n        \r\n        return <div className=\"app\">\r\n            <div className=\"nav\">\r\n                <ul>\r\n                    <li className={t===AppTab.Insectopedia?\"active\":\"\"} onClick={() => this.switchView(AppTab.Insectopedia)}>Insectopedia</li>\r\n                    <li className={t===AppTab.Fishopedia?\"active\":\"\"} onClick={() => this.switchView(AppTab.Fishopedia)}>Fishopedia</li>\r\n                    <li className={t===AppTab.Insects?\"active\":\"\"} onClick={() => this.switchView(AppTab.Insects)}>Insects</li>\r\n                    <li className={t===AppTab.Fish?\"active\":\"\"} onClick={() => this.switchView(AppTab.Fish)}>Fish</li>\r\n                    <li className=\"spacer\">-</li>\r\n                    <li className={t===AppTab.January?\"active\":\"\"}  onClick={() => this.switchView(AppTab.January)}>January</li>\r\n                    <li className={t===AppTab.February?\"active\":\"\"}  onClick={() => this.switchView(AppTab.February)}>February</li>\r\n                    <li className={t===AppTab.March?\"active\":\"\"}  onClick={() => this.switchView(AppTab.March)}>March</li>\r\n                    <li className={t===AppTab.April?\"active\":\"\"}  onClick={() => this.switchView(AppTab.April)}>April</li>\r\n                    <li className={t===AppTab.May?\"active\":\"\"}  onClick={() => this.switchView(AppTab.May)}>May</li>\r\n                    <li className={t===AppTab.June?\"active\":\"\"}  onClick={() => this.switchView(AppTab.June)}>June</li>\r\n                    <li className={t===AppTab.July?\"active\":\"\"}  onClick={() => this.switchView(AppTab.July)}>July</li>\r\n                    <li className={t===AppTab.August?\"active\":\"\"}  onClick={() => this.switchView(AppTab.August)}>August</li>\r\n                    <li className={t===AppTab.September?\"active\":\"\"}  onClick={() => this.switchView(AppTab.September)}>September</li>\r\n                    <li className={t===AppTab.October?\"active\":\"\"}  onClick={() => this.switchView(AppTab.October)}>October</li>\r\n                    <li className={t===AppTab.November?\"active\":\"\"}  onClick={() => this.switchView(AppTab.November)}>November</li>\r\n                    <li className={t===AppTab.December?\"active\":\"\"}  onClick={() => this.switchView(AppTab.December)}>December</li>\r\n                </ul>\r\n            </div>\r\n            <div  style={{overflowX: \"auto\", height:\"95vh\"}}>\r\n                \r\n                {t===AppTab.Insectopedia? <CritterpediaTiles type=\"bug\" key=\"bug\" /> : t===AppTab.Fishopedia ? <CritterpediaTiles type=\"fish\" key=\"fish\" /> : t===AppTab.Insects ? <AllBugs cols={allFishCols} /> : t===AppTab.Fish ? <AllFish cols={allFishCols} /> : <Month month={(t as number) - 2} />}\r\n                \r\n\r\n            </div>\r\n            \r\n        </div>;\r\n    }\r\n\r\n}\r\n\r\ninterface MonthProps {\r\n    month: number;\r\n}\r\n\r\nclass Month extends React.Component<MonthProps> {\r\n    render() {\r\n        return <div style={{display:\"flex\"}}>\r\n            <div style={{borderRight:\"2px solid white\"}}>\r\n                <h1 style={{width:\"100%\", textAlign: \"center\", background: \"black\", margin: \"0\", color: \"white\"}}>Fish</h1>\r\n                <AllFish cols={condensedFishCols} month={this.props.month} />\r\n            </div>\r\n            <div>\r\n                <h1 style={{width:\"100%\", textAlign: \"center\", background: \"black\", margin: \"0\", color: \"white\"}}>Insects</h1>\r\n                <AllBugs cols={condensedFishCols} month={this.props.month} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\ninterface AllBugsProps {\r\n    cols: Col[];\r\n    month?: number;\r\n    filter?: (f: Bug) => boolean\r\n}\r\n\r\ninterface AllBugsState {\r\n    sort: string;\r\n    reverseSort: boolean;\r\n}\r\n\r\nclass AllBugs extends React.Component<AllBugsProps, AllBugsState> {\r\n\r\n    constructor(props: AllBugsProps) {\r\n        super(props);\r\n        this.state = {sort: \"index\", reverseSort: false};\r\n    }\r\n\r\n    setSort(this: AllBugs, sort: string) {\r\n        if (this.state.sort===sort) {\r\n            this.setState({reverseSort: !this.state.reverseSort});\r\n        } else {\r\n            this.setState({sort: sort, reverseSort: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let bugsT = [];\r\n        let evenL = true;\r\n        let sort = this.state.sort;\r\n        let rev = this.state.reverseSort;\r\n        bugsArr.sort((aa, bb) => {\r\n            let ans = ((a, b) => {\r\n                if (sort === \"index\") return a.index-b.index;\r\n                if (sort === \"name\") return a.name.localeCompare(b.name);\r\n                if (sort === \"price\") return a.price - b.price;\r\n                if (sort === \"location\") return a.location.localeCompare(b.location);\r\n                if (sort === \"times\") return a.times[0].localeCompare(b.times[0]);\r\n                return 0;\r\n            })(aa,bb) * (rev ? -1 : 1);\r\n            if (ans === 0) return aa.index-bb.index;\r\n            return ans;\r\n        });\r\n        for (let bug of bugsArr) {\r\n            let m = this.props.month;\r\n            if (this.props.month !== undefined && !bug.seasons[this.props.month]) continue;\r\n            const even = evenL;\r\n            let ans = <tr key={bug.index}>\r\n                {this.props.cols.includes(Col.Index)?<td className={(even?\"even\":\"odd\")}>{bug.index}</td>:<div />}\r\n                {this.props.cols.includes(Col.Name)?<td className={(even?\"even\":\"odd\")}>{bug.name+(m!==undefined&&!bug.seasons[(m + 1) % 12]?\" [1]\":\"\")+(m!==undefined&&!bug.seasons[(m + 11) % 12]?\" [2]\":\"\")}</td>:<div />}\r\n                {this.props.cols.includes(Col.Price)?<td className={(even?\"even\":\"odd\")}>{bug.price}</td>:<div />}\r\n                {this.props.cols.includes(Col.Location)?<td className={(even?\"even\":\"odd\")}>{bug.location}</td>:<div />}\r\n                {this.props.cols.includes(Col.Times)?<td className={(even?\"even\":\"odd\")}>{bug.times.join(\", \")}</td>:<div />}\r\n                {this.props.cols.includes(Col.Months)?bug.seasons.map((v, i) => <td key={i} className={\"check \"+(even?\"even\":\"odd\")+(v?\" yes\":\" no\")}>{v?\"🗹\":\"🗷\"}</td>):<div />}\r\n                {this.props.cols.includes(Col.Caught)?<td className={even?\"even\":\"odd\"}>{bug.caught.map(s => \"'\"+s+\"'\").join(\"\\t|\\t\")}</td>:<div />}\r\n            </tr>\r\n            bugsT.push(ans);\r\n            evenL = !evenL;\r\n        }\r\n        return <table className=\"blue\">\r\n            <thead><tr>\r\n            {this.props.cols.includes(Col.Index)?<th onClick={() => this.setSort(\"index\")} className={\"clickable \"}>#</th>:<div />}\r\n                {this.props.cols.includes(Col.Name)?<th onClick={() => this.setSort(\"name\")} className={\"clickable \"}>Name</th>:<div />}\r\n                {this.props.cols.includes(Col.Price)?<th onClick={() => this.setSort(\"price\")} className={\"clickable \"}>Price</th>:<div />}\r\n                {this.props.cols.includes(Col.Location)?<th onClick={() => this.setSort(\"location\")} className={\"clickable\"}>Location</th>:<div />}\r\n                {this.props.cols.includes(Col.Times)?<th onClick={() => this.setSort(\"times\")} className={\"clickable \"}>Times</th>:<div />}\r\n                {this.props.cols.includes(Col.Months)?monthNames.map(v => <th key={v}>{v.charAt(0)}</th>):<div />}\r\n                {this.props.cols.includes(Col.Caught)?<th>Catch Messages</th>:<div />}\r\n            </tr></thead>\r\n            <tbody style={{overflowY: \"auto\"}}>\r\n                {bugsT}\r\n            </tbody>\r\n        </table>;\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface AllFishProps {\r\n    cols: Col[];\r\n    month?: number;\r\n    filter?: (f: Fish) => boolean\r\n}\r\nconst allFishCols = [Col.Index, Col.Name, Col.Price, Col.Location, Col.Times, Col.Shadow, Col.Months, Col.Caught];\r\nconst condensedFishCols = [Col.Name, Col.Price, Col.Location, Col.Times, Col.Shadow]\r\n\r\ninterface AllFishState {\r\n    sort: string;\r\n    reverseSort: boolean;\r\n}\r\n\r\nclass AllFish extends React.Component<AllFishProps, AllFishState> {\r\n\r\n    constructor(props: AllFishProps) {\r\n        super(props);\r\n        this.state = {sort: \"index\", reverseSort: false}\r\n    }\r\n\r\n    setSort(this: AllFish, sort: string) {\r\n        if (this.state.sort===sort) {\r\n            this.setState({reverseSort: !this.state.reverseSort});\r\n        } else {\r\n            this.setState({sort: sort, reverseSort: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let fishT = [];\r\n        let evenL = true;\r\n        let sort = this.state.sort;\r\n        let rev = this.state.reverseSort;\r\n        fishArr.sort((aa, bb) => {\r\n            let ans = ((a, b) => {\r\n                if (sort === \"index\") return a.index-b.index;\r\n                if (sort === \"name\") return a.name.localeCompare(b.name);\r\n                if (sort === \"price\") return a.price - b.price;\r\n                if (sort === \"location\") return a.location.localeCompare(b.location);\r\n                if (sort === \"times\") return a.times[0].localeCompare(b.times[0]);\r\n                if (sort === \"shadow\") return a.shadow.localeCompare(b.shadow);\r\n                return 0;\r\n            })(aa,bb) * (rev ? -1 : 1);\r\n            if (ans === 0) return aa.index-bb.index;\r\n            return ans;\r\n        });\r\n        for (let fish of fishArr) {\r\n            let m = this.props.month;\r\n            if (this.props.month !== undefined && !fish.seasons[this.props.month]) continue;\r\n            const even = evenL;\r\n\r\n            let ans = <tr key={fish.index}>\r\n                {this.props.cols.includes(Col.Index)?<td className={(even?\"even\":\"odd\")}>{fish.index}</td>:<div />}\r\n                {this.props.cols.includes(Col.Name)?<td className={(even?\"even\":\"odd\")}>{fish.name+(m!==undefined&&!fish.seasons[(m + 1) % 12]?\" [1]\":\"\")+(m!==undefined&&!fish.seasons[(m + 11) % 12]?\" [2]\":\"\")}</td>:<div />}\r\n                {this.props.cols.includes(Col.Price)?<td className={(even?\"even\":\"odd\")}>{fish.price}</td>:<div />}\r\n                {this.props.cols.includes(Col.Location)?<td className={(even?\"even\":\"odd\")}>{fish.location}</td>:<div />}\r\n                {this.props.cols.includes(Col.Times)?<td className={(even?\"even\":\"odd\")}>{fish.times.join(\", \")}</td>:<div />}\r\n                {this.props.cols.includes(Col.Shadow)?<td className={even?\"even\":\"odd\"}>{fish.shadow}</td>:<div />}\r\n                {this.props.cols.includes(Col.Months)?fish.seasons.map((v, i) => <td key={i} className={\"check \"+(even?\"even\":\"odd\")+(v?\" yes\":\" no\")}>{v?\"🗹\":\"🗷\"}</td>):<div />}\r\n                {this.props.cols.includes(Col.Caught)?<td className={even?\"even\":\"odd\"}>{fish.caught.map(s => \"'\"+s+\"'\").join(\"\\t|\\t\")}</td>:<div />}\r\n            </tr>\r\n            fishT.push(ans);\r\n            evenL = !evenL;\r\n        }\r\n        return <table className=\"blue\">\r\n            <thead><tr>\r\n                {this.props.cols.includes(Col.Index)?<th onClick={() => this.setSort(\"index\")} className={\"clickable \"}>#</th>:<div />}\r\n                {this.props.cols.includes(Col.Name)?<th onClick={() => this.setSort(\"name\")} className={\"clickable \"}>Name</th>:<div />}\r\n                {this.props.cols.includes(Col.Price)?<th onClick={() => this.setSort(\"price\")} className={\"clickable \"}>Price</th>:<div />}\r\n                {this.props.cols.includes(Col.Location)?<th onClick={() => this.setSort(\"location\")} className={\"clickable\"}>Location</th>:<div />}\r\n                {this.props.cols.includes(Col.Times)?<th onClick={() => this.setSort(\"times\")} className={\"clickable \"}>Times</th>:<div />}\r\n                {this.props.cols.includes(Col.Shadow)?<th onClick={() => this.setSort(\"shadow\")} className={\"clickable \"}>Shadow</th>:<div />}\r\n                {this.props.cols.includes(Col.Months)?monthNames.map(v => <th key={v}>{v.charAt(0)}</th>):<div />}\r\n                {this.props.cols.includes(Col.Caught)?<th>Catch Messages</th>:<div />}\r\n            </tr></thead>\r\n            <tbody style={{overflowY: \"auto\"}}>\r\n                {fishT}\r\n            </tbody>\r\n        </table>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import bugsRaw from \"./bugs.json\";\r\nimport fishRaw from \"./fish.json\";\r\n\r\nexport const bugsArr: Bug[] = bugsRaw.sort((a, b) => a.index - b.index);\r\nexport const fishArr: Fish[] = fishRaw.sort((a, b) => a.index - b.index);\r\n\r\nexport const monthNames = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const shortMonths = [\r\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n]\r\n\r\nexport class Bug {\r\n    imageNum: number = 0;\r\n    index: number = 0;\r\n    id: number = 0;\r\n    name: string = \"\";\r\n    price: number = 0;\r\n    location: string = \"\";\r\n    times: string[] = [];\r\n    seasons: boolean[] = [];\r\n    caught: string[] = [];\r\n}\r\n\r\nexport class Fish {\r\n    imageNum: number = 0;\r\n    index: number = 0;\r\n    id: number = 0;\r\n    name: string = \"\";\r\n    price: number = 0;\r\n    location: string = \"\";\r\n    shadow: string = \"\";\r\n    times: string[] = [];\r\n    seasons: boolean[] = [];\r\n    caught: string[] = [];\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport \"./glyph.css\";\r\nimport {Bug, Fish, bugsArr, fishArr, shortMonths} from \"./Types\"\r\n\r\nimport * as cookies from \"browser-cookies\";\r\n\r\ninterface CritterpediaTilesProps {\r\n    type: \"bug\" | \"fish\";\r\n}\r\n\r\ninterface CritterpediaTilesState {\r\n    noTimeBar: boolean;\r\n    noCompleted: boolean;\r\n    onlyMonth: boolean;\r\n    onlyTime: boolean;\r\n    showMore: boolean;\r\n}\r\n\r\nexport class CritterpediaTiles extends React.Component<CritterpediaTilesProps, CritterpediaTilesState> {\r\n\r\n    constructor(props: CritterpediaTilesProps) {\r\n        super(props);\r\n        this.state = {\r\n            noTimeBar: cookies.get(this.props.type+\"NoTimeBar\")===\"1\",\r\n            noCompleted: cookies.get(this.props.type+\"NoCompleted\")===\"1\",\r\n            onlyMonth: cookies.get(this.props.type+\"OnlyMonth\")===\"1\",\r\n            onlyTime: cookies.get(this.props.type+\"OnlyTime\")===\"1\",\r\n            showMore: cookies.get(this.props.type+\"ShowMore\")===\"1\"\r\n        }\r\n    }\r\n\r\n    setOption(name: keyof CritterpediaTilesState, value: boolean) {\r\n        let ns: any = {};\r\n        ns[name] = value;\r\n        cookies.set(this.props.type+name.charAt(0).toUpperCase()+name.substring(1), value?\"1\":\"0\");\r\n        this.setState(ns);\r\n    }\r\n\r\n    render() {\r\n        let tiles = (this.props.type === \"bug\" ? bugsArr : fishArr).map(b => <CritterpediaTile data={b} key={b.index} parState={this.state}/>);\r\n        return <div>\r\n            <div className=\"critterTilesOptionsContainer\">\r\n                <div className=\"critterTilesOptions\">\r\n                    <h1>{this.props.type===\"bug\"?\"Insectopedia\":\"Fishopedia\"}</h1>\r\n                    <div className=\"main\">\r\n                        Double click an entry to mark it as complete.\r\n                        <br/><br/>\r\n                        <input id=\"noTimeBar\" type=\"checkbox\" checked={this.state.noTimeBar} onChange={() => this.setOption(\"noTimeBar\", !this.state.noTimeBar)}/>\r\n                        <label htmlFor=\"noTimeBar\">Hide Time Bar</label>\r\n                        <br/>\r\n                        <input id=\"noCompleted\" type=\"checkbox\" checked={this.state.noCompleted} onChange={() => this.setOption(\"noCompleted\", !this.state.noCompleted)}/>\r\n                        <label htmlFor=\"noCompleted\">Hide Completed</label>\r\n                        <br/>\r\n                        <input id=\"onlyMonth\" type=\"checkbox\" checked={this.state.onlyMonth} onChange={() => this.setOption(\"onlyMonth\", !this.state.onlyMonth)}/>\r\n                        <label htmlFor=\"onlyMonth\">Filter to Current Month</label>\r\n                        <br/>\r\n                        <input id=\"onlyTime\" type=\"checkbox\" checked={this.state.onlyTime} onChange={() => this.setOption(\"onlyTime\", !this.state.onlyTime)}/>\r\n                        <label htmlFor=\"onlyTime\">Filter to Current Time</label>\r\n                        <br/>\r\n                        <input id=\"showMore\" type=\"checkbox\" checked={this.state.showMore} onChange={() => this.setOption(\"showMore\", !this.state.showMore)}/>\r\n                        <label htmlFor=\"showMore\">Show More Info</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"critterTiles\">\r\n                {tiles}\r\n            </div>\r\n            \r\n        </div>\r\n    }\r\n}\r\n\r\ninterface CritterpediaTileProps {\r\n    data: Bug | Fish;\r\n    parState: CritterpediaTilesState;\r\n}\r\n\r\ninterface CritterpediaTileState {\r\n    done: boolean;\r\n}\r\n\r\nexport class CritterpediaTile extends React.Component<CritterpediaTileProps, CritterpediaTileState> {\r\n\r\n    constructor(props: CritterpediaTileProps) {\r\n        super(props);\r\n        let f = \"shadow\" in this.props.data;\r\n        this.state = {done: cookies.get((f?\"fish\":\"bug\")+this.props.data.index)===\"1\"};\r\n    }\r\n\r\n    setDone() {\r\n        let f = \"shadow\" in this.props.data;\r\n        cookies.set((f?\"fish\":\"bug\")+this.props.data.index, this.state.done?\"0\":\"1\");\r\n        this.setState({done: !this.state.done});\r\n    }\r\n\r\n    func(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        if (e.detail > 1) e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        let fs = this.props.parState;\r\n        if (fs.noCompleted && this.state.done) return null;\r\n        let now = new Date(Date.now());\r\n        let d = this.props.data;\r\n        if (fs.onlyMonth && !d.seasons[now.getMonth()]) return null;\r\n        let f = \"shadow\" in this.props.data;\r\n        let active = [];\r\n        for (let t of d.times) {\r\n            if (t===\"All Day\") {\r\n                active = [...Array(24)].map((_, n) => n);\r\n                break;\r\n            }\r\n            let sp = t.split(\" \");\r\n            let hr1S = t.split(\":\")[0];\r\n            let hr2S = sp[3].split(\":\")[0];\r\n            let hr1 = Number.parseInt(hr1S);\r\n            let hr2 = Number.parseInt(hr2S);\r\n            if (sp[1]===\"AM\") {\r\n                if (hr1===12)  hr1 = 0;\r\n            } else hr1 += 12;\r\n            if (sp[4]===\"AM\") {\r\n                if (hr2===12) hr2 = 0;\r\n            } else hr2 += 12;\r\n            for (let i = hr1; i < hr2 || i < 24; i++) {\r\n                active.push(i);\r\n            }\r\n            if (hr1 > hr2) {\r\n                for (let i = 0; i < hr2; i++) active.push(i);\r\n            }\r\n        }\r\n        if (fs.onlyTime && !active.includes(now.getHours())) return null;\r\n        \r\n        return <div className={\"critterTile \"+(this.state.done?\"done\":\"\")} onMouseDown={this.func} onDoubleClick={() => this.setDone()}>\r\n            <h1>#{d.index} {d.name} <span className=\"icon-owl\"></span></h1>\r\n            <div className=\"main\">\r\n                <div className=\"img\"  style={{backgroundImage:\"url(\\\"\"+process.env.PUBLIC_URL+\"/img/\"+(f?\"Fish\":\"Ins\")+d.imageNum+\".png\\\")\"}}>\r\n                    <span className=\"icon-owl\" />\r\n                </div>\r\n                <ul>\r\n                    <li><div className=\"header\">Price</div><div>{d.price}</div></li>\r\n                    <li><div className=\"header\">Location</div><div>{d.location}</div></li>\r\n                    <li><div className=\"header\">Time</div><div>{d.times.join(\"\\n\")}</div></li>\r\n                    {f?<li><div className=\"header\">Shadow</div><div>{(d as Fish).shadow}</div></li>:<div />}\r\n                </ul>\r\n            </div>\r\n            {fs.noTimeBar ? null : <HourBar active={active} />}\r\n\r\n            <div className=\"months\">\r\n                {[0,1,2,3,4,5,6,7,8,9,10,11].map(n => <div key={n} className={\"month \"+(d.seasons[n]?\"active\":\"\")}>{shortMonths[n]}</div>)}\r\n            </div>\r\n            {fs.showMore?<div className=\"caughtMessages\" style={{whiteSpace: \"inherit\"}}>\r\n                {d.caught.map((s, i) => <blockquote key={i}>{s}</blockquote>)}\r\n            </div>:null}\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\ninterface HourBarProps {\r\n    active: number[];\r\n}\r\n\r\nexport class HourBar extends React.Component<HourBarProps, {now: Date}> {\r\n\r\n    private interval?: NodeJS.Timeout;\r\n\r\n    constructor(props: HourBarProps) {\r\n        super(props);\r\n        this.state = {now: new Date(Date.now())}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setTimeout(() => this.setupInterval(), (60-(new Date(Date.now()).getSeconds()))*1000);\r\n        \r\n    }\r\n\r\n    setupInterval() {\r\n        this.interval = setInterval(() => this.setState({now: new Date(Date.now())}), 60*1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval !== undefined) clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        let hrs = this.props.active;\r\n        let now = new Date(Date.now());\r\n        let nowM = now.getMinutes() + now.getHours()*60;\r\n        return <div className=\"hourBar\">\r\n        <div className=\"ticks\">\r\n            {[...Array(25)].map((_, n) => <div key={n} className=\"tick\"></div>)}\r\n        </div>\r\n        <div className=\"hoursShow\">\r\n            {[...Array(24)].map((_, n) => <div key={n} className={(hrs.includes(n)?\"active\":\"\")+(hrs.includes(n+1)?\"\":\" last\")+(hrs.includes(n-1)?\"\":\" first\")}></div>)}\r\n        </div>\r\n        <div className=\"secondBorder\"></div>\r\n        <div className=\"now\" style={{left: (nowM/(24*60)*100)+\"%\"}} />\r\n        <div className=\"hourLabels\">\r\n            <div><div>12 AM</div></div>\r\n            <div><div>6 AM</div></div>\r\n            <div><div>12 PM</div></div>\r\n            <div><div>6 PM</div></div>\r\n            <div><div>12 AM</div></div>\r\n        </div>\r\n        </div>\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}