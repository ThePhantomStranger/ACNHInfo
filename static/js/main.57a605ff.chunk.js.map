{"version":3,"sources":["js/CritterTable.tsx","js/Types.ts","js/Tiles.tsx","js/App.tsx","serviceWorker.ts","index.tsx"],"names":["Col","bugsArr","bugsRaw","sort","a","b","index","fishArr","fishRaw","monthNames","shortMonths","CritterpediaTiles","props","cookies","expires","state","noTimeBar","noCompleted","onlyMonth","onlyTime","showMore","name","value","ns","this","setState","tiles","type","map","data","key","parState","className","id","checked","onChange","setOption","htmlFor","React","Component","CritterpediaTile","f","done","newlyDone","e","detail","preventDefault","fs","now","Date","d","seasons","getMonth","active","times","t","Array","_","n","sp","split","hr1S","hr2S","hr1","Number","parseInt","hr2","i","push","includes","getHours","undefined","onMouseDown","func","onDoubleClick","setDone","style","backgroundImage","imageNum","price","location","join","shadow","whiteSpace","caught","s","HourBar","interval","setTimeout","setupInterval","getSeconds","setInterval","clearInterval","hrs","nowM","getMinutes","left","AppTab","CritterTable","reverseSort","arr","ansArr","rev","aa","bb","ans","localeCompare","fish","m","month","cols","Index","Name","Price","Location","Times","Shadow","Months","v","Caught","onClick","setSort","charAt","overflowY","allCritterCols","condensedCritterCols","App","tab","Insectopedia","view","switchView","Fishopedia","Insects","Fish","January","February","March","April","May","June","July","August","September","October","November","December","overflowX","height","Month","display","borderRight","width","textAlign","background","margin","color","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.57a605ff.chunk.js","sourcesContent":["import {Bug, Fish, bugsArr, fishArr, monthNames} from \"./Types\"\r\nimport React from 'react';\r\nimport \"../css/CritterTable.scss\"\r\n\r\nexport enum Col {\r\n    Index, Name, Price, Location, Times, Shadow, Months, Caught\r\n}\r\n\r\ninterface CritterTableProps {\r\n    cols: Col[];\r\n    type: \"Fish\" | \"Bug\";\r\n    month?: number;\r\n    filter?: (f: Fish | Bug) => boolean\r\n}\r\n\r\n\r\ninterface CritterTableState {\r\n    sort: string;\r\n    reverseSort: boolean;\r\n}\r\n\r\nexport class CritterTable extends React.Component<CritterTableProps, CritterTableState> {\r\n\r\n    constructor(props: CritterTableProps) {\r\n        super(props);\r\n        this.state = {sort: \"index\", reverseSort: false}\r\n    }\r\n\r\n    setSort(this: CritterTable, sort: string) {\r\n        if (this.state.sort===sort) {\r\n            this.setState({reverseSort: !this.state.reverseSort});\r\n        } else {\r\n            this.setState({sort: sort, reverseSort: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let t = this.props.type===\"Fish\";\r\n        let arr: (Bug | Fish)[] = t ? fishArr : bugsArr;\r\n        let ansArr = [];\r\n        let sort = this.state.sort;\r\n        let rev = this.state.reverseSort;\r\n        arr.sort((aa, bb) => {\r\n            let ans = ((a, b) => {\r\n                if (sort === \"index\") return a.index-b.index;\r\n                if (sort === \"name\") return a.name.localeCompare(b.name);\r\n                if (sort === \"price\") return a.price - b.price;\r\n                if (sort === \"location\") return a.location.localeCompare(b.location);\r\n                if (sort === \"times\") return a.times[0].localeCompare(b.times[0]);\r\n                if (sort === \"shadow\" && \"shadow\" in a && \"shadow\" in b) return a.shadow.localeCompare(b.shadow);\r\n                return 0;\r\n            })(aa,bb) * (rev ? -1 : 1);\r\n            if (ans === 0) return aa.index-bb.index;\r\n            return ans;\r\n        });\r\n        for (let fish of arr) {\r\n            let m = this.props.month;\r\n            if (this.props.month !== undefined && !fish.seasons[this.props.month]) continue;\r\n\r\n            let ans = <tr key={fish.index}>\r\n                {this.props.cols.includes(Col.Index)?<td>{fish.index}</td>:<div />}\r\n                {this.props.cols.includes(Col.Name)?<td>{fish.name+(m!==undefined&&!fish.seasons[(m + 1) % 12]?\" [1]\":\"\")+(m!==undefined&&!fish.seasons[(m + 11) % 12]?\" [2]\":\"\")}</td>:<div />}\r\n                {this.props.cols.includes(Col.Price)?<td>{fish.price}</td>:<div />}\r\n                {this.props.cols.includes(Col.Location)?<td>{fish.location}</td>:<div />}\r\n                {this.props.cols.includes(Col.Times)?<td>{fish.times.join(\", \")}</td>:<div />}\r\n                {this.props.cols.includes(Col.Shadow) && \"shadow\" in fish?<td>{fish.shadow}</td>:null}\r\n                {this.props.cols.includes(Col.Months)?fish.seasons.map((v, i) => <td key={i} className={\"check \"+(v?\" yes\":\" no\")}>{v?\"🗹\":\"🗷\"}</td>):<div />}\r\n                {this.props.cols.includes(Col.Caught)?<td>{fish.caught.map(s => \"'\"+s+\"'\").join(\"\\t|\\t\")}</td>:<div />}\r\n            </tr>\r\n            ansArr.push(ans);\r\n        }\r\n        return <table className=\"critterTable blue\">\r\n            <thead><tr>\r\n                {this.props.cols.includes(Col.Index)?<th onClick={() => this.setSort(\"index\")} className={\"clickable \"}>#</th>:<div />}\r\n                {this.props.cols.includes(Col.Name)?<th onClick={() => this.setSort(\"name\")} className={\"clickable \"}>Name</th>:<div />}\r\n                {this.props.cols.includes(Col.Price)?<th onClick={() => this.setSort(\"price\")} className={\"clickable \"}>Price</th>:<div />}\r\n                {this.props.cols.includes(Col.Location)?<th onClick={() => this.setSort(\"location\")} className={\"clickable\"}>Location</th>:<div />}\r\n                {this.props.cols.includes(Col.Times)?<th onClick={() => this.setSort(\"times\")} className={\"clickable \"}>Times</th>:<div />}\r\n                {this.props.cols.includes(Col.Shadow) && t?<th onClick={() => this.setSort(\"shadow\")} className={\"clickable \"}>Shadow</th>:null}\r\n                {this.props.cols.includes(Col.Months)?monthNames.map(v => <th key={v}>{v.charAt(0)}</th>):<div />}\r\n                {this.props.cols.includes(Col.Caught)?<th>Catch Messages</th>:<div />}\r\n            </tr></thead>\r\n            <tbody style={{overflowY: \"auto\"}}>\r\n                {ansArr}\r\n            </tbody>\r\n        </table>;\r\n    }\r\n}","import bugsRaw from \"../assets/bugs.json\";\r\nimport fishRaw from \"../assets/fish.json\";\r\n\r\nexport const bugsArr: Bug[] = bugsRaw.sort((a, b) => a.index - b.index);\r\nexport const fishArr: Fish[] = fishRaw.sort((a, b) => a.index - b.index);\r\n\r\nexport const monthNames = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const shortMonths = [\r\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n]\r\n\r\nexport class Bug {\r\n    imageNum: number = 0;\r\n    index: number = 0;\r\n    id: number = 0;\r\n    name: string = \"\";\r\n    price: number = 0;\r\n    location: string = \"\";\r\n    times: string[] = [];\r\n    seasons: boolean[] = [];\r\n    caught: string[] = [];\r\n}\r\n\r\nexport class Fish {\r\n    imageNum: number = 0;\r\n    index: number = 0;\r\n    id: number = 0;\r\n    name: string = \"\";\r\n    price: number = 0;\r\n    location: string = \"\";\r\n    shadow: string = \"\";\r\n    times: string[] = [];\r\n    seasons: boolean[] = [];\r\n    caught: string[] = [];\r\n}","import React from 'react';\r\nimport '../css/CritterTiles.scss';\r\nimport \"../css/glyph.css\";\r\nimport {Bug, Fish, bugsArr, fishArr, shortMonths} from \"./Types\"\r\n\r\nimport * as cookies from \"browser-cookies\";\r\n\r\ninterface CritterpediaTilesProps {\r\n    type: \"bug\" | \"fish\";\r\n}\r\n\r\ninterface CritterpediaTilesState {\r\n    noTimeBar: boolean;\r\n    noCompleted: boolean;\r\n    onlyMonth: boolean;\r\n    onlyTime: boolean;\r\n    showMore: boolean;\r\n}\r\n\r\nexport class CritterpediaTiles extends React.Component<CritterpediaTilesProps, CritterpediaTilesState> {\r\n\r\n    constructor(props: CritterpediaTilesProps) {\r\n        super(props);\r\n        cookies.defaults.expires = 100000;\r\n        this.state = {\r\n            noTimeBar: cookies.get(\"noTimeBar\")===\"1\",\r\n            noCompleted: cookies.get(\"noCompleted\")===\"1\",\r\n            onlyMonth: cookies.get(\"onlyMonth\")===\"1\",\r\n            onlyTime: cookies.get(\"onlyTime\")===\"1\",\r\n            showMore: cookies.get(\"showMore\")===\"1\"\r\n        }\r\n    }\r\n\r\n    setOption(name: keyof CritterpediaTilesState, value: boolean) {\r\n        let ns: any = {};\r\n        ns[name] = value;\r\n        cookies.set(name, value?\"1\":\"0\");\r\n        this.setState(ns);\r\n    }\r\n\r\n    render() {\r\n        let tiles = (this.props.type === \"bug\" ? bugsArr : fishArr).map(b => <CritterpediaTile data={b} key={b.index} parState={this.state}/>);\r\n        return <div>\r\n            <div className=\"critterTilesOptionsContainer\">\r\n                <div className=\"critterTilesOptions\">\r\n                    <h1>{this.props.type===\"bug\"?\"Insectopedia\":\"Fishopedia\"}</h1>\r\n                    <div className=\"main\">\r\n                        Double click an entry to mark it as complete.\r\n                        <br/><br/>\r\n                        <input id=\"noTimeBar\" type=\"checkbox\" checked={this.state.noTimeBar} onChange={() => this.setOption(\"noTimeBar\", !this.state.noTimeBar)}/>\r\n                        <label htmlFor=\"noTimeBar\">Hide Time Bar</label>\r\n                        <br/>\r\n                        <input id=\"noCompleted\" type=\"checkbox\" checked={this.state.noCompleted} onChange={() => this.setOption(\"noCompleted\", !this.state.noCompleted)}/>\r\n                        <label htmlFor=\"noCompleted\">Hide Completed</label>\r\n                        <br/>\r\n                        <input id=\"onlyMonth\" type=\"checkbox\" checked={this.state.onlyMonth} onChange={() => this.setOption(\"onlyMonth\", !this.state.onlyMonth)}/>\r\n                        <label htmlFor=\"onlyMonth\">Filter to Current Month</label>\r\n                        <br/>\r\n                        <input id=\"onlyTime\" type=\"checkbox\" checked={this.state.onlyTime} onChange={() => this.setOption(\"onlyTime\", !this.state.onlyTime)}/>\r\n                        <label htmlFor=\"onlyTime\">Filter to Current Time</label>\r\n                        <br/>\r\n                        <input id=\"showMore\" type=\"checkbox\" checked={this.state.showMore} onChange={() => this.setOption(\"showMore\", !this.state.showMore)}/>\r\n                        <label htmlFor=\"showMore\">Show More Info</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"critterTiles\">\r\n                {tiles}\r\n            </div>\r\n            \r\n        </div>\r\n    }\r\n}\r\n\r\ninterface CritterpediaTileProps {\r\n    data: Bug | Fish;\r\n    parState: CritterpediaTilesState;\r\n}\r\n\r\ninterface CritterpediaTileState {\r\n    done: boolean;\r\n    newlyDone?: boolean;\r\n}\r\n\r\nexport class CritterpediaTile extends React.Component<CritterpediaTileProps, CritterpediaTileState> {\r\n\r\n    constructor(props: CritterpediaTileProps) {\r\n        super(props);\r\n        let f = \"shadow\" in this.props.data;\r\n        this.state = {done: cookies.get((f?\"fish\":\"bug\")+this.props.data.index)===\"1\"};\r\n    }\r\n\r\n    setDone() {\r\n        let f = \"shadow\" in this.props.data;\r\n        cookies.set((f?\"fish\":\"bug\")+this.props.data.index, this.state.done?\"0\":\"1\");\r\n        this.setState({done: !this.state.done, newlyDone: !this.state.done});\r\n    }\r\n\r\n    func(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        if (e.detail > 1) e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        let fs = this.props.parState;\r\n        if (fs.noCompleted && this.state.done) return null;\r\n        let now = new Date(Date.now());\r\n        let d = this.props.data;\r\n        if (fs.onlyMonth && !d.seasons[now.getMonth()]) return null;\r\n        let f = \"shadow\" in this.props.data;\r\n        let active = [];\r\n        for (let t of d.times) {\r\n            if (t===\"All Day\") {\r\n                active = [...Array(24)].map((_, n) => n);\r\n                break;\r\n            }\r\n            let sp = t.split(\" \");\r\n            let hr1S = t.split(\":\")[0];\r\n            let hr2S = sp[3].split(\":\")[0];\r\n            let hr1 = Number.parseInt(hr1S);\r\n            let hr2 = Number.parseInt(hr2S);\r\n            if (sp[1]===\"AM\") {\r\n                if (hr1===12)  hr1 = 0;\r\n            } else hr1 += 12;\r\n            if (sp[4]===\"AM\") {\r\n                if (hr2===12) hr2 = 0;\r\n            } else hr2 += 12;\r\n            for (let i = hr1; hr1<hr2 ? i<hr2 : i<24; i++) {\r\n                active.push(i);\r\n            }\r\n            if (hr1 > hr2) {\r\n                for (let i = 0; i < hr2; i++) active.push(i);\r\n            }\r\n        }\r\n        if (fs.onlyTime && !active.includes(now.getHours())) return null;\r\n        \r\n        return <div className={\"critterTile \"+(this.state.done?\"done\":\"\")+(this.state.newlyDone!==undefined?\" stamp\":\"\")} onMouseDown={this.func} onDoubleClick={() => this.setDone()}>\r\n            <h1>#{d.index} {d.name} <span className=\"icon-owl\"></span></h1>\r\n            <div className=\"main\">\r\n                <div className=\"img\"  style={{backgroundImage:\"url(\\\"\"+process.env.PUBLIC_URL+\"/img/\"+(f?\"Fish\":\"Ins\")+d.imageNum+\".png\\\")\"}}>\r\n                    <span className=\"icon-owl\" />\r\n                </div>\r\n                <ul>\r\n                    <li><div className=\"header\">Price</div><div>{d.price}</div></li>\r\n                    <li><div className=\"header\">Location</div><div>{d.location}</div></li>\r\n                    <li><div className=\"header\">Time</div><div>{d.times.join(\"\\n\")}</div></li>\r\n                    {f?<li><div className=\"header\">Shadow</div><div>{(d as Fish).shadow}</div></li>:<div />}\r\n                </ul>\r\n            </div>\r\n            {fs.noTimeBar ? null : <HourBar active={active} />}\r\n\r\n            <div className=\"months\">\r\n                {[0,1,2,3,4,5,6,7,8,9,10,11].map(n => <div key={n} className={\"month \"+(d.seasons[n]?\"active\":\"\")}>{shortMonths[n]}</div>)}\r\n            </div>\r\n            {fs.showMore?<div className=\"caughtMessages\" style={{whiteSpace: \"inherit\"}}>\r\n                {d.caught.map((s, i) => <blockquote key={i}>{s}</blockquote>)}\r\n            </div>:null}\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\ninterface HourBarProps {\r\n    active: number[];\r\n}\r\n\r\nexport class HourBar extends React.Component<HourBarProps, {now: Date}> {\r\n\r\n    private interval?: NodeJS.Timeout;\r\n\r\n    constructor(props: HourBarProps) {\r\n        super(props);\r\n        this.state = {now: new Date(Date.now())}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setTimeout(() => this.setupInterval(), (60-(new Date(Date.now()).getSeconds()))*1000);\r\n        \r\n    }\r\n\r\n    setupInterval() {\r\n        this.interval = setInterval(() => this.setState({now: new Date(Date.now())}), 60*1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval !== undefined) clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        let hrs = this.props.active;\r\n        let now = new Date(Date.now());\r\n        let nowM = now.getMinutes() + now.getHours()*60;\r\n        return <div className=\"hourBar\">\r\n        <div className=\"ticks\">\r\n            {[...Array(25)].map((_, n) => <div key={n} className=\"tick\"></div>)}\r\n        </div>\r\n        <div className=\"hoursShow\">\r\n            {[...Array(24)].map((_, n) => <div key={n} className={(hrs.includes(n)?\"active\":\"\")+(hrs.includes(n+1)?\"\":\" last\")+(hrs.includes(n-1)?\"\":\" first\")}></div>)}\r\n        </div>\r\n        <div className=\"secondBorder\"></div>\r\n        <div className=\"now\" style={{left: (nowM/(24*60)*100)+\"%\"}} />\r\n        <div className=\"hourLabels\">\r\n            <div><div>12 AM</div></div>\r\n            <div><div>6 AM</div></div>\r\n            <div><div>12 PM</div></div>\r\n            <div><div>6 PM</div></div>\r\n            <div><div>12 AM</div></div>\r\n        </div>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport '../css/App.scss';\r\nimport {CritterpediaTiles} from \"./Tiles\"\r\nimport {Col, CritterTable} from \"./CritterTable\"\r\n\r\nenum AppTab {\r\n    January=0, February, March, April, May, June, July, August, September, October, November, December,\r\n    Insectopedia, Fishopedia, Insects, Fish\r\n}\r\n\r\ninterface AppState {\r\n    tab: AppTab\r\n}\r\n\r\nconst allCritterCols = [Col.Index, Col.Name, Col.Price, Col.Location, Col.Times, Col.Shadow, Col.Months, Col.Caught];\r\nconst condensedCritterCols = [Col.Name, Col.Price, Col.Location, Col.Times, Col.Shadow]\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {tab: AppTab.Insectopedia}\r\n    }\r\n\r\n    switchView(this: App, view: AppTab) {\r\n        this.setState({tab: view});\r\n    }\r\n\r\n    render() {\r\n        let t = this.state.tab;\r\n        \r\n        return <div className=\"app\">\r\n            <div className=\"nav\">\r\n                <ul>\r\n                    <li className={t===AppTab.Insectopedia?\"active\":\"\"} onClick={() => this.switchView(AppTab.Insectopedia)}>Insectopedia</li>\r\n                    <li className={t===AppTab.Fishopedia?\"active\":\"\"} onClick={() => this.switchView(AppTab.Fishopedia)}>Fishopedia</li>\r\n                    <li className={t===AppTab.Insects?\"active\":\"\"} onClick={() => this.switchView(AppTab.Insects)}>Insects</li>\r\n                    <li className={t===AppTab.Fish?\"active\":\"\"} onClick={() => this.switchView(AppTab.Fish)}>Fish</li>\r\n                    <li className=\"spacer\">-</li>\r\n                    <li className={t===AppTab.January?\"active\":\"\"}  onClick={() => this.switchView(AppTab.January)}>January</li>\r\n                    <li className={t===AppTab.February?\"active\":\"\"}  onClick={() => this.switchView(AppTab.February)}>February</li>\r\n                    <li className={t===AppTab.March?\"active\":\"\"}  onClick={() => this.switchView(AppTab.March)}>March</li>\r\n                    <li className={t===AppTab.April?\"active\":\"\"}  onClick={() => this.switchView(AppTab.April)}>April</li>\r\n                    <li className={t===AppTab.May?\"active\":\"\"}  onClick={() => this.switchView(AppTab.May)}>May</li>\r\n                    <li className={t===AppTab.June?\"active\":\"\"}  onClick={() => this.switchView(AppTab.June)}>June</li>\r\n                    <li className={t===AppTab.July?\"active\":\"\"}  onClick={() => this.switchView(AppTab.July)}>July</li>\r\n                    <li className={t===AppTab.August?\"active\":\"\"}  onClick={() => this.switchView(AppTab.August)}>August</li>\r\n                    <li className={t===AppTab.September?\"active\":\"\"}  onClick={() => this.switchView(AppTab.September)}>September</li>\r\n                    <li className={t===AppTab.October?\"active\":\"\"}  onClick={() => this.switchView(AppTab.October)}>October</li>\r\n                    <li className={t===AppTab.November?\"active\":\"\"}  onClick={() => this.switchView(AppTab.November)}>November</li>\r\n                    <li className={t===AppTab.December?\"active\":\"\"}  onClick={() => this.switchView(AppTab.December)}>December</li>\r\n                </ul>\r\n            </div>\r\n            <div  style={{overflowX: \"auto\", height:\"95vh\"}}>\r\n                \r\n                {t===AppTab.Insectopedia? <CritterpediaTiles type=\"bug\" key=\"bug\" /> : t===AppTab.Fishopedia ? <CritterpediaTiles type=\"fish\" key=\"fish\" /> : t===AppTab.Insects ? <CritterTable type=\"Bug\" cols={allCritterCols} /> : t===AppTab.Fish ? <CritterTable type=\"Fish\" cols={allCritterCols} /> : <Month month={(t as number)} />}\r\n                \r\n\r\n            </div>\r\n            \r\n        </div>;\r\n    }\r\n\r\n}\r\n\r\ninterface MonthProps {\r\n    month: number;\r\n}\r\n\r\nclass Month extends React.Component<MonthProps> {\r\n    render() {\r\n        return <div style={{display:\"flex\"}}>\r\n            <div style={{borderRight:\"2px solid white\"}}>\r\n                <h1 style={{width:\"100%\", textAlign: \"center\", background: \"black\", margin: \"0\", color: \"white\"}}>Fish</h1>\r\n                <CritterTable type=\"Fish\" cols={condensedCritterCols} month={this.props.month} />\r\n            </div>\r\n            <div>\r\n                <h1 style={{width:\"100%\", textAlign: \"center\", background: \"black\", margin: \"0\", color: \"white\"}}>Insects</h1>\r\n                <CritterTable type=\"Bug\" cols={condensedCritterCols} month={this.props.month} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './js/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}